export default function SaveStateRemovedComponents() {
    return (
        <div style={{width: '500px'}}>
        <h2>6. Сохранение состояния удаленных компонентов</h2>
        <p>В реальном приложении чата вы, вероятно, захотите восстановить состояние ввода, когда пользователь снова выбирает предыдущего получателя. Есть несколько способов сохранить состояние «живым» для компонента, который больше не виден:</p>
        <p>Вы можете отобразить все чаты, а не только текущий, но <b>скрыть</b> все остальные <b>с помощью CSS.</b> Чаты не будут удалены из дерева, поэтому их локальное состояние будет сохранено. Это решение отлично работает для простых пользовательских интерфейсов. Но это может быть очень медленным, если скрытые деревья большие и содержат много узлов DOM.</p>
        <p>Вы можете <b>поднять состояние и сохранить</b>  ожидающее сообщение для каждого получателя <b>в родительском компоненте.</b> Таким образом, когда удаляются дочерние компоненты, это не имеет значения, потому что родительский компонент сохраняет важную информацию. Это наиболее распространенное решение.</p>
        <p>Вы также можете использовать другой источник в дополнение к состоянию React. Например, вы, вероятно, хотите, чтобы черновик сообщения сохранялся, даже если пользователь случайно закроет страницу. Чтобы реализовать это, вы можете сделать так, чтобы Chat-компонент инициализировал свое состояние, читая из файла <b>localStorage,</b> и сохранял там черновики.</p>
        </div>
    )
} 